"""
Read a measurements file generated by eval_limesdr_fpga.py
and plots the PER/SNR curve, plus CFO values.
"""

import sys
from collections import defaultdict

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

if __name__ == "__main__":
    expected_payload = np.arange(100, dtype=np.uint8)
    num_bits = len(expected_payload) * 8

    data = defaultdict(list)
    with open(sys.argv[1]) as f:
        for line in f.read().splitlines():
            if line.startswith("CFO"):
                cfo, sto = line.split(",")
                data["cfo"].append(float(cfo.split("=")[1]))
                data["sto"].append(int(sto.split("=")[1]))
            elif line.startswith("SNR"):
                snr, txp = line.split(",")
                data["snr"].append(float(snr.split("=")[1]))
                data["txp"].append(int(txp.split("=")[1]))
            elif line.startswith("packet"):
                *_, payload = line.split(",", maxsplit=2)
                payload = list(map(int, payload.split("=")[1][1:-1].split(",")))
                ber = (
                    np.unpackbits(
                        expected_payload ^ np.array(payload, dtype=np.uint8)
                    ).sum()
                    / num_bits
                )
                invalid = 1 if ber > 0 else 0
                data["ber"].append(ber)
                data["invalid"].append(invalid)
        df = pd.DataFrame.from_dict(data)

        print(df)

    fig = df.groupby("txp").hist(column="cfo")
    plt.suptitle("CFO values for different SNR values")
    plt.xlabel("CFO [Hz]")
    plt.ylabel("Number of packets")

    plt.legend(df["txp"].unique())
    plt.show()


    print(df.groupby("snr").head())
    per_data = df.groupby("snr").apply(lambda x: x["invalid"].sum() / len(x)).reset_index()
    per_data.columns = ["SNR", "PER"]
   

    plt.figure(figsize=(10, 6))
    plt.plot(per_data["SNR"], per_data["PER"], marker="o", label="PER-SNR Curve")
    plt.xlabel("SNR (dB)")
    plt.ylabel("Packet Error Rate (PER)")
    plt.title("PER vs. SNR")
    plt.grid(True)
    plt.legend()
    plt.show()
